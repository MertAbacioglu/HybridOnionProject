// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayer.Repository;

#nullable disable

namespace NLayer.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220703171547_myMigration")]
    partial class myMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("NLayer.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6313),
                            Name = "Laptop",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6318),
                            Name = "Mobile Phone",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6320),
                            Name = "Vinly",
                            Status = 1
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6462),
                            Name = "MSI CX-61",
                            Price = 100m,
                            Status = 1,
                            Stock = 5
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6465),
                            Name = "Lenov Z580",
                            Price = 100m,
                            Status = 1,
                            Stock = 5
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6467),
                            Name = "HP Probook",
                            Price = 100m,
                            Status = 1,
                            Stock = 5
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6469),
                            Name = "IPhone 11",
                            Price = 100m,
                            Status = 1,
                            Stock = 5
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6471),
                            Name = "Galaxy Core",
                            Price = 100m,
                            Status = 1,
                            Stock = 5
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6473),
                            Name = "Metallica Load",
                            Price = 100m,
                            Status = 1,
                            Stock = 5
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6475),
                            Name = "ELOY Down",
                            Price = 100m,
                            Status = 1,
                            Stock = 5
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Color = "Blue",
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6495),
                            Height = 11,
                            Status = 1,
                            Width = 21
                        },
                        new
                        {
                            Id = 2,
                            Color = "Blue",
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6497),
                            Height = 12,
                            Status = 1,
                            Width = 22
                        },
                        new
                        {
                            Id = 3,
                            Color = "Blue",
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6499),
                            Height = 13,
                            Status = 1,
                            Width = 23
                        },
                        new
                        {
                            Id = 4,
                            Color = "Blue",
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6501),
                            Height = 14,
                            Status = 1,
                            Width = 24
                        },
                        new
                        {
                            Id = 5,
                            Color = "Blue",
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6503),
                            Height = 15,
                            Status = 1,
                            Width = 25
                        },
                        new
                        {
                            Id = 6,
                            Color = "Blue",
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6505),
                            Height = 16,
                            Status = 1,
                            Width = 26
                        },
                        new
                        {
                            Id = 7,
                            Color = "Blue",
                            CreatedDate = new DateTime(2022, 7, 3, 20, 15, 47, 263, DateTimeKind.Local).AddTicks(6507),
                            Height = 17,
                            Status = 1,
                            Width = 27
                        });
                });

            modelBuilder.Entity("NLayer.Core.Models.Product", b =>
                {
                    b.HasOne("NLayer.Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NLayer.Core.Models.ProductFeature", b =>
                {
                    b.HasOne("NLayer.Core.Models.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("NLayer.Core.Models.ProductFeature", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NLayer.Core.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("NLayer.Core.Models.Product", b =>
                {
                    b.Navigation("ProductFeature");
                });
#pragma warning restore 612, 618
        }
    }
}
